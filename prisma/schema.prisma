// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  engineType = "binary"
  binaryTargets = ["native", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
}
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum SKStatus {
  VERIFY
  APPROVED
  REVISED
  REJECTED
}

enum SKType {
  KEMATIAN
}

model user {
  id           String    @id @default(uuid())
  name         String    @db.VarChar(60)
  email        String    @unique
  password     String
  role         UserRole? @default(USER)
  born_birth   DateTime?
  born_place   String?
  nik          String?   @unique
  religion     String?
  address      String?
  refreshToken String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt

  user_sks     user_sk[]
}

model user_sk {
  id          String   @id @default(cuid())
  user_id     String
  sk_id       String
  sk_type     SKType
  sk_status   SKStatus  @default(VERIFY)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  user        user     @relation(fields: [user_id], references: [id])

  @@index([user_id, sk_id], name: "user_sk_user_id_sk_id_idx")
}

model sk_kematian {
  id           String    @id @default(cuid())
  name         String
  born_birth   DateTime
  born_place   String
  nik          String
  religion     String
  address      String
  death_date   DateTime
  death_place  String
  death_reason String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}